name: Deploy Traffic Mirroring Test

on:
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy Terraform Infrastructure
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ vars.AWS_REGION }}
      TF_VAR_aws_region: ${{ vars.AWS_REGION }}
      TF_VAR_tfe_token: ${{ secrets.TF_CLOUD_TOKEN }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Terraform Environment
        run: |
          wget https://releases.hashicorp.com/terraform/0.15.5/terraform_0.15.5_linux_amd64.zip
          unzip terraform_0.15.5_linux_amd64.zip
          chmod +x terraform
          mv terraform /usr/local/bin/

      - name: Get Source ENI ID of ECS Task
        id: get_eni
        env:
          CLUSTER_NAME: ${{ vars.TF_VAR_CLUSTER_NAME }}
          SERVICE_NAME: ${{ vars.TF_VAR_SERVICE_NAME }}
        run: |
          TASK_ARN=$(aws ecs list-tasks --cluster $CLUSTER_NAME --service-name $SERVICE_NAME --query 'taskArns[0]' --output text)
          ENI_ID=$(aws ecs describe-tasks --cluster $CLUSTER_NAME --tasks $TASK_ARN \
                    --query 'tasks[0].attachments[0].details[?name==`networkInterfaceId`].value' --output text)
          echo "SOURCE_ENI_ID=$ENI_ID" >> $GITHUB_ENV

      - name: Terraform Init
        working-directory: ./tests
        run: terraform init

      - name: Terraform Apply
        working-directory: ./tests
        run: terraform apply -auto-approve -var "source_eni_id=$SOURCE_ENI_ID"
