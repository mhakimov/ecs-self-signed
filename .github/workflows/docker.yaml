name: Deploy Infrastructure

on: [push]
# on: 
#   workflow_dispatch:
jobs:
  deploy:
    name: Build image
    runs-on: ubuntu-latest
    env:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2 

    steps:
    - uses: docker-practice/actions-setup-docker@master
    - name: Install docker
      run: |
          set -x
          docker version

    - uses: actions/checkout@v4
    - name: Checkout Code
      run: |
        ls
        docker build -t hello-world .
        
    - name: Configure AWS CLI
      uses: aws-actions/configure-aws-credentials@v3.0.2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2 

     

        
    - name: Push image to repo
      run: |
          echo "building image"
          docker version        
          REPO_URI=$(aws ecr describe-repositories --repository-names fargate-repo --query 'repositories[].repositoryUri' --output text)
          echo $REPO_URI
          docker tag hello-world $REPO_URI

#   ci:
#       runs-on: ubuntu-latest
#       env:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: eu-west-2 
#       steps:
#       - uses: docker-practice/actions-setup-docker@master
#         timeout-minutes: 12
#       - run: |
#           set -x
  
#           docker version
  
#         #   docker run --rm hello-world
    
#       - name: Push image to repo
#         run: |
#           REPO_URI=$(aws ecr describe-repositories --repository-names fargate-repo --query 'repositories[].repositoryUri' --output text)
#           echo $REPO_URI